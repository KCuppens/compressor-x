# Generated by Django 4.1.3 on 2022-12-11 13:08

import uuid

import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models

import django_extensions.db.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Unique identification",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date of creation"),
                ),
                (
                    "date_updated",
                    models.DateTimeField(auto_now=True, verbose_name="Date of last update"),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(blank=True, null=True, verbose_name="Delete date"),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[("draft", "Draft"), ("published", "Published")],
                        default="draft",
                        max_length=255,
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=55,
                        null=True,
                        verbose_name="Meta title",
                    ),
                ),
                (
                    "meta_keywords",
                    models.TextField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Meta keywords",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(blank=True, null=True, verbose_name="Meta description"),
                ),
                (
                    "meta_image",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Meta image"
                    ),
                ),
                (
                    "markup_data",
                    models.TextField(blank=True, null=True, verbose_name="Structured markup data"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "slug",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True,
                        editable=False,
                        populate_from="name",
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="service/",
                        verbose_name="Image",
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "verbose_name": "Topic",
                "verbose_name_plural": "Topics",
            },
            managers=[
                ("_tree_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Unique identification",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date of creation"),
                ),
                (
                    "date_updated",
                    models.DateTimeField(auto_now=True, verbose_name="Date of last update"),
                ),
                (
                    "date_deleted",
                    models.DateTimeField(blank=True, null=True, verbose_name="Delete date"),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[("draft", "Draft"), ("published", "Published")],
                        default="draft",
                        max_length=255,
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=55,
                        null=True,
                        verbose_name="Meta title",
                    ),
                ),
                (
                    "meta_keywords",
                    models.TextField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Meta keywords",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(blank=True, null=True, verbose_name="Meta description"),
                ),
                (
                    "meta_image",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Meta image"
                    ),
                ),
                (
                    "markup_data",
                    models.TextField(blank=True, null=True, verbose_name="Structured markup data"),
                ),
                ("question", models.CharField(max_length=255, verbose_name="Question")),
                ("answer", models.TextField(blank=True, verbose_name="Answer")),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "topic",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="faq.topic"),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
            },
            managers=[
                ("_tree_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
